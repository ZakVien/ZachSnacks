@model Ecommerce.Models.ShippingAndBillingViewModel
@{
    ViewBag.Title = "Checkout - Shipping Info";
}

<div class="container">
    @using (Html.BeginForm("ShippingInfo", "Checkout",
        new { ReturnUrl = Request.QueryString["ReturnUrl"] },
        FormMethod.Post,
        new { @class = "form-signup", onsubmit = "return validate()" }))
    {
        if (IsPost)
        {
            <div class="alert alert-danger">
                <p><b>Please fill out all required fields </b></p>
            </div>
        }

        <h2 class="form-signup-heading">Shipping Information</h2>
        <div class="form-group">
            @Html.LabelFor(m => m.ShippingFirstName, "First Name", new { @class = "control-label required" })
            @Html.TextBoxFor(m => m.ShippingFirstName, new { @class = "form-control", placeholder = "First Name", autofocus = "", onkeyup = "borderColor(this)" })
            @Html.ValidationMessageFor(m => m.ShippingFirstName)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ShippingLastName, "Last Name", new { @class = "control-label required" })
            @Html.TextBoxFor(m => m.ShippingLastName, new { @class = "form-control", placeholder = "Last Name", autofocus = "", onkeyup = "borderColor(this)" })
            @Html.ValidationMessageFor(m => m.ShippingLastName)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ShippingAddress1, "Address", new { @class = "control-label required" })
            @Html.TextBoxFor(m => m.ShippingAddress1, new { @class = "form-control", placeholder = "Address", autofocus = "", onkeyup = "borderColor(this)" })
            @Html.ValidationMessageFor(m => m.ShippingAddress1)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ShippingAddress2, "Address 2", new { @class = "control-label" })
            @Html.TextBoxFor(m => m.ShippingAddress2, new { @class = "form-control", placeholder = "Apartment,  studio, or floor", autofocus = "" })
            @Html.ValidationMessageFor(m => m.ShippingAddress2)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ShippingCity, "City", new { @class = "control-label required" })
            @Html.TextBoxFor(m => m.ShippingCity, new { @class = "form-control", placeholder = "City/Town", autofocus = "", onkeyup = "borderColor(this)" })
            @Html.ValidationMessageFor(m => m.ShippingCity)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ShippingState, "State", new { @class = "control-label required" })
            @Html.TextBoxFor(m => m.ShippingState, new { @class = "form-control", placeholder = "State", autofocus = "", onkeyup = "borderColor(this)" })
            @Html.ValidationMessageFor(m => m.ShippingState)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ShippingZIPCode, "ZIP", new { @class = "control-label required" })
            @Html.TextBoxFor(m => m.ShippingZIPCode, new { @class = "form-control", placeholder = "ZIP", autofocus = "", onkeyup = "borderColor(this)" })
            @Html.ValidationMessageFor(m => m.ShippingZIPCode)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CustomerEmail, "Email address", new { @class = "control-label required" })
            @Html.TextBoxFor(m => m.CustomerEmail, new { @class = "form-control", placeholder = "Email address", autofocus = "", onkeyup = "borderColor(this)" })
            @Html.ValidationMessageFor(m => m.CustomerEmail)
        </div>
       
        @Html.HiddenFor(m => m.BillingZIPCode, new { Value = "11111" });
        @Html.HiddenFor(m => m.BillingCreditCard, new { Value = "1111111111111111" });
        @Html.HiddenFor(m => m.BillingCVC, new { Value = "111" });
        @Html.HiddenFor(m => m.BillingExpMonth, new { Value = "1" });
        @Html.HiddenFor(m => m.BillingExpYear, new { Value = "2025" });
        <div class="text-center">
            <button class="btn btn-lg btn-primary" type="submit">Continue</button>
            <br />
            <br />
            <button class="btn btn-lg btn-dark" type="button" onclick="location.href='@Url.Action("Index", "Cart")'">Cancel</button>
        </div>
    }
</div>

<script>
    function validate() {
        var firstNameInput = document.getElementById("ShippingFirstName");
        var lastNameInput = document.getElementById("ShippingLastName");
        var addr1Input = document.getElementById("ShippingAddress1");
        var addr2Input = document.getElementById("ShippingAddress2");
        var cityInput = document.getElementById("ShippingCity");
        var stateInput = document.getElementById("ShippingState");
        var zipInput = document.getElementById("ShippingZIPCode");
        var emailInput = document.getElementById("CustomerEmail");

        var firstName = firstNameInput.value.replace(/\s/g, '');
        var lastName = lastNameInput.value.replace(/\s/g, '');
        var addr1 = addr1Input.value.trim();
        var addr2 = addr2Input.value.trim();
        var city = cityInput.value.trim();
        var state = stateInput.value.replace(/\s/g, '');
        var zip = zipInput.value.replace(/\s/g, '');
        var email = emailInput.value.replace(/\s/g, '');

        // Return trimmed strings
        firstNameInput.value = firstName;
        lastNameInput.value = lastName;
        addr1Input.value = addr1;
        addr2Input.value = addr2;
        cityInput.value = city;
        stateInput.value = state.toUpperCase();
        zipInput.value = zip;
        emailInput.value = email;

        return true;
    }

    window.onload = function () {
        var stateError = document.getElementById("ShippingState").nextElementSibling;
        if (stateError.innerHTML.length > 0) stateError.textContent = "State must be two letters.";

        var inputBoxes = document.getElementsByClassName("form-control");
        changeInputboxBackgroundColor(inputBoxes);

        for (var i = 0; i < inputBoxes.length; i++) {
            inputBoxes[i].addEventListener('keyup', function () {
                changeInputboxBackgroundColor(inputBoxes);
            });
        }

        function changeInputboxBackgroundColor(box) {
            for (var i = 0; i < box.length; i++) {
                if (box[i].value != "") {
                    box[i].style["background-color"] = 'rgb(232, 240, 254)';
                } else {
                    box[i].style["background-color"] = 'white';
                }
            }
        }
    }

</script>